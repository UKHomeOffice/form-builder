// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReportsPanel renders pie and bar chart 1`] = `
<ReportsPanel>
  <Container
    fluid={true}
  >
    <div
      className="container-fluid"
    >
      <div
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        <h1
          className="display-5"
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  512,
                  512,
                  Array [],
                  "f201",
                  "M496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM464 96H345.94c-21.38 0-32.09 25.85-16.97 40.97l32.4 32.4L288 242.75l-73.37-73.37c-12.5-12.5-32.76-12.5-45.25 0l-68.69 68.69c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L192 237.25l73.37 73.37c12.5 12.5 32.76 12.5 45.25 0l96-96 32.4 32.4c15.12 15.12 40.97 4.41 40.97-16.97V112c.01-8.84-7.15-16-15.99-16z",
                ],
                "iconName": "chart-line",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            swapOpacity={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chart-line fa-w-16 "
              data-icon="chart-line"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M496 384H64V80c0-8.84-7.16-16-16-16H16C7.16 64 0 71.16 0 80v336c0 17.67 14.33 32 32 32h464c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM464 96H345.94c-21.38 0-32.09 25.85-16.97 40.97l32.4 32.4L288 242.75l-73.37-73.37c-12.5-12.5-32.76-12.5-45.25 0l-68.69 68.69c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L192 237.25l73.37 73.37c12.5 12.5 32.76 12.5 45.25 0l96-96 32.4 32.4c15.12 15.12 40.97 4.41 40.97-16.97V112c.01-8.84-7.15-16-15.99-16z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
           
          <span
            className="ml-2"
          >
            home.reports
          </span>
        </h1>
      </div>
      <Row
        noGutters={false}
      >
        <div
          className="row"
        >
          <Col>
            <div
              className="col"
            >
              <Card
                body={false}
                border="secondary"
                style={
                  Object {
                    "marginBottom": "15px",
                    "width": "100hv",
                  }
                }
              >
                <div
                  className="card border-secondary"
                  style={
                    Object {
                      "marginBottom": "15px",
                      "width": "100hv",
                    }
                  }
                >
                  <CardBody>
                    <div
                      className="card-body"
                    >
                      <CardTitle>
                        <ForwardRef
                          className="card-title"
                        >
                          <div
                            className="card-title h5"
                          >
                            home.forms-per-environment
                          </div>
                        </ForwardRef>
                      </CardTitle>
                      <div
                        style={
                          Object {
                            "height": "500px",
                          }
                        }
                      >
                        <ResponsivePie
                          animate={true}
                          borderColor={
                            Object {
                              "from": "color",
                              "modifiers": Array [
                                Array [
                                  "darker",
                                  0.2,
                                ],
                              ],
                            }
                          }
                          borderWidth={1}
                          colors={
                            Object {
                              "scheme": "nivo",
                            }
                          }
                          cornerRadius={3}
                          data={
                            Array [
                              Object {
                                "id": "dev",
                                "label": "Development",
                                "value": 10,
                              },
                              Object {
                                "id": "demo",
                                "label": "Demo",
                                "value": 12,
                              },
                            ]
                          }
                          innerRadius={0.5}
                          legends={
                            Array [
                              Object {
                                "anchor": "bottom",
                                "direction": "row",
                                "effects": Array [
                                  Object {
                                    "on": "hover",
                                    "style": Object {
                                      "itemTextColor": "#000",
                                    },
                                  },
                                ],
                                "itemHeight": 18,
                                "itemTextColor": "#999",
                                "itemWidth": 100,
                                "symbolShape": "circle",
                                "symbolSize": 18,
                                "translateY": 56,
                              },
                            ]
                          }
                          margin={
                            Object {
                              "bottom": 80,
                              "left": 80,
                              "right": 80,
                              "top": 40,
                            }
                          }
                          motionDamping={15}
                          motionStiffness={90}
                          padAngle={0.7}
                          radialLabelsLinkColor={
                            Object {
                              "from": "color",
                            }
                          }
                          radialLabelsLinkDiagonalLength={16}
                          radialLabelsLinkHorizontalLength={24}
                          radialLabelsLinkOffset={0}
                          radialLabelsLinkStrokeWidth={1}
                          radialLabelsSkipAngle={10}
                          radialLabelsTextColor="#333333"
                          radialLabelsTextXOffset={6}
                          slicesLabelsSkipAngle={10}
                          slicesLabelsTextColor="#333333"
                        >
                          <ResponsiveWrapper>
                            <Measure
                              bounds={true}
                              onResize={[Function]}
                            >
                              <Component
                                bounds={true}
                                contentRect={
                                  Object {
                                    "bounds": Object {},
                                    "client": Object {},
                                    "entry": Object {},
                                    "margin": Object {},
                                    "offset": Object {},
                                    "scroll": Object {},
                                  }
                                }
                                measure={[Function]}
                                measureRef={[Function]}
                              >
                                <div
                                  style={
                                    Object {
                                      "height": "100%",
                                      "width": "100%",
                                    }
                                  }
                                />
                              </Component>
                            </Measure>
                          </ResponsiveWrapper>
                        </ResponsivePie>
                      </div>
                    </div>
                  </CardBody>
                </div>
              </Card>
            </div>
          </Col>
          <Col>
            <div
              className="col"
            >
              <Card
                body={false}
                border="secondary"
                style={
                  Object {
                    "marginBottom": "15px",
                    "width": "100hv",
                  }
                }
              >
                <div
                  className="card border-secondary"
                  style={
                    Object {
                      "marginBottom": "15px",
                      "width": "100hv",
                    }
                  }
                >
                  <CardBody>
                    <div
                      className="card-body"
                    >
                      <CardTitle>
                        <ForwardRef
                          className="card-title"
                        >
                          <div
                            className="card-title h5"
                          >
                            home.types-of-forms
                          </div>
                        </ForwardRef>
                      </CardTitle>
                      <div
                        style={
                          Object {
                            "height": "500px",
                          }
                        }
                      >
                        <ResponsiveBar
                          animate={true}
                          axisBottom={
                            Object {
                              "legend": "Environments",
                              "legendOffset": 32,
                              "legendPosition": "middle",
                              "tickPadding": 5,
                              "tickRotation": 0,
                              "tickSize": 5,
                            }
                          }
                          axisLeft={
                            Object {
                              "legend": "Total",
                              "legendOffset": -40,
                              "legendPosition": "middle",
                              "tickPadding": 5,
                              "tickRotation": 0,
                              "tickSize": 5,
                            }
                          }
                          axisRight={null}
                          axisTop={null}
                          colors={
                            Object {
                              "scheme": "nivo",
                            }
                          }
                          data={
                            Array [
                              Object {
                                "form": 12,
                                "name": "dev",
                                "wizard": 10,
                              },
                              Object {
                                "form": 12,
                                "name": "demo",
                                "wizard": 10,
                              },
                            ]
                          }
                          indexBy="name"
                          keys={
                            Array [
                              "wizard",
                              "form",
                            ]
                          }
                          labelSkipHeight={12}
                          labelSkipWidth={12}
                          labelTextColor={
                            Object {
                              "from": "color",
                              "modifiers": Array [
                                Array [
                                  "darker",
                                  1.6,
                                ],
                              ],
                            }
                          }
                          legends={
                            Array [
                              Object {
                                "anchor": "bottom-right",
                                "dataFrom": "keys",
                                "direction": "column",
                                "effects": Array [
                                  Object {
                                    "on": "hover",
                                    "style": Object {
                                      "itemOpacity": 1,
                                    },
                                  },
                                ],
                                "itemDirection": "left-to-right",
                                "itemHeight": 20,
                                "itemOpacity": 0.85,
                                "itemWidth": 100,
                                "itemsSpacing": 2,
                                "justify": false,
                                "symbolSize": 20,
                                "translateX": 120,
                                "translateY": 0,
                              },
                            ]
                          }
                          margin={
                            Object {
                              "bottom": 50,
                              "left": 60,
                              "right": 130,
                              "top": 50,
                            }
                          }
                          motionDamping={15}
                          motionStiffness={90}
                          padding={0.3}
                        >
                          <ResponsiveWrapper>
                            <Measure
                              bounds={true}
                              onResize={[Function]}
                            >
                              <Component
                                bounds={true}
                                contentRect={
                                  Object {
                                    "bounds": Object {},
                                    "client": Object {},
                                    "entry": Object {},
                                    "margin": Object {},
                                    "offset": Object {},
                                    "scroll": Object {},
                                  }
                                }
                                measure={[Function]}
                                measureRef={[Function]}
                              >
                                <div
                                  style={
                                    Object {
                                      "height": "100%",
                                      "width": "100%",
                                    }
                                  }
                                />
                              </Component>
                            </Measure>
                          </ResponsiveWrapper>
                        </ResponsiveBar>
                      </div>
                    </div>
                  </CardBody>
                </div>
              </Card>
            </div>
          </Col>
        </div>
      </Row>
    </div>
  </Container>
</ReportsPanel>
`;
